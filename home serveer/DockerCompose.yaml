version: "3.9"

networks:
  proxy:
    driver: bridge

volumes:
  portainer_data:
  nginx_data:
  nginx_letsencrypt:

services:

  ## ── Reverse Proxy: NGINX Proxy Manager ────────────────────────────────
  nginx-proxy-manager:
    image: jc21/nginx-proxy-manager:latest
    container_name: nginx-proxy-manager
    restart: unless-stopped
    ports:
      - "80:80"    # HTTP proxy
      - "443:443"  # HTTPS proxy
      - "81:81"    # NPM UI
    networks:
      - proxy
    volumes:
      - nginx_data:/data
      - nginx_letsencrypt:/etc/letsencrypt
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:81"]
      interval: 30s
      timeout: 10s
      retries: 3

  ## ── Portainer (Docker GUI) ───────────────────────────────────────────
  portainer:
    image: portainer/portainer-ce
    container_name: portainer
    restart: unless-stopped
    depends_on:
      nginx-proxy-manager:
        condition: service_healthy
    networks:
      - proxy
    expose:
      - "9000"
    labels:
      - "nginx.domain=portainer.local"
      - "nginx.forward_port=9000"
      - "nginx.ssl=false"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data

  ## ── Gitea (Self-hosted Git) ───────────────────────────────────────────
  gitea:
    image: gitea/gitea:latest
    container_name: gitea
    restart: unless-stopped
    depends_on:
      nginx-proxy-manager:
        condition: service_healthy
    networks:
      - proxy
    expose:
      - "3000"
      - "22"
    labels:
      - "nginx.domain=gitea.local"
      - "nginx.forward_port=3000"
      - "nginx.ssl=false"
    environment:
      - USER_UID=1000
      - USER_GID=1000
    volumes:
      - /home/docker_data/gitea:/data

  ## ── Nextcloud (Private Cloud) ───────────────────────────────────────
  nextcloud:
    image: nextcloud
    container_name: nextcloud
    restart: unless-stopped
    depends_on:
      nginx-proxy-manager:
        condition: service_healthy
    networks:
      - proxy
    expose:
      - "80"
    labels:
      - "nginx.domain=nextcloud.local"
      - "nginx.forward_port=80"
      - "nginx.ssl=false"
    volumes:
      - /hdd/nextcloud:/var/www/html

  ## ── Plex Media Server ────────────────────────────────────────────────
  plex:
    image: lscr.io/linuxserver/plex
    container_name: plex
    restart: unless-stopped
    network_mode: host
    environment:
      - PUID=1000
      - PGID=1000
      - VERSION=docker
    volumes:
      - /hdd/plex:/config
      - /hdd/plex-media:/media

  ## ── File Browser ─────────────────────────────────────────────────────
  filebrowser:
    image: filebrowser/filebrowser
    container_name: filebrowser
    restart: unless-stopped
    depends_on:
      nginx-proxy-manager:
        condition: service_healthy
    networks:
      - proxy
    expose:
      - "80"
    labels:
      - "nginx.domain=files.local"
      - "nginx.forward_port=80"
      - "nginx.ssl=false"
    volumes:
      - /home:/srv
      - /home/docker_data/filebrowser/filebrowser.db:/database.db
      - /home/docker_data/filebrowser/settings.json:/config/settings.json

  ## ── JupyterLab ───────────────────────────────────────────────────────
  jupyterlab:
    image: jupyter/base-notebook
    container_name: jupyterlab
    restart: unless-stopped
    depends_on:
      nginx-proxy-manager:
        condition: service_healthy
    networks:
      - proxy
    expose:
      - "8888"
    labels:
      - "nginx.domain=jupyter.local"
      - "nginx.forward_port=8888"
      - "nginx.ssl=false"
    environment:
      - JUPYTER_TOKEN=yourpassword
    volumes:
      - /home/docker_data/jupyter:/home/jovyan/work

  ## ── VS Code Server ────────────────────────────────────────────────────
  code-server:
    image: lscr.io/linuxserver/code-server
    container_name: code-server
    restart: unless-stopped
    depends_on:
      nginx-proxy-manager:
        condition: service_healthy
    networks:
      - proxy
    expose:
      - "8443"
    labels:
      - "nginx.domain=code.local"
      - "nginx.forward_port=8443"
      - "nginx.ssl=false"
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Asia/Kolkata
      - PASSWORD=yourpassword
    volumes:
      - /home/docker_data/code-server:/config

  ## ── Dev Workspace (SSD-backed) ────────────────────────────────────────
  dev-workspace:
    image: ubuntu:22.04
    container_name: dev-workspace
    restart: unless-stopped
    stdin_open: true
    tty: true
    volumes:
      - /home/docker_data/dev-workspace:/workspace
    command: tail -f /dev/null

  ## ── DVWA (Vuln Web App) ──────────────────────────────────────────────
  dvwa:
    image: vulnerables/web-dvwa
    container_name: dvwa
    restart: unless-stopped
    depends_on:
      nginx-proxy-manager:
        condition: service_healthy
    networks:
      - proxy
    expose:
      - "80"
    labels:
      - "nginx.domain=dvwa.local"
      - "nginx.forward_port=80"
      - "nginx.ssl=false"

  ## ── OWASP Juice Shop ─────────────────────────────────────────────────
  juice-shop:
    image: bkimminich/juice-shop
    container_name: juice-shop
    restart: unless-stopped
    depends_on:
      nginx-proxy-manager:
        condition: service_healthy
    networks:
      - proxy
    expose:
      - "3000"
    labels:
      - "nginx.domain=juice.local"
      - "nginx.forward_port=3000"
      - "nginx.ssl=false"

  ## ── MySQL & phpMyAdmin ───────────────────────────────────────────────
  mysql:
    image: mysql:5.7
    container_name: mysql
    restart: unless-stopped
    environment:
      - MYSQL_ROOT_PASSWORD=root
    volumes:
      - /home/docker_data/mysql:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin","ping","-h","localhost","-uroot","-proot"]
      interval: 30s
      retries: 5

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    restart: unless-stopped
    depends_on:
      - mysql
      - nginx-proxy-manager
    networks:
      - proxy
    expose:
      - "80"
    labels:
      - "nginx.domain=phpmyadmin.local"
      - "nginx.forward_port=80"
      - "nginx.ssl=false"
    environment:
      - PMA_HOST=mysql

  ## ── Tailscale (VPN) ──────────────────────────────────────────────────
  tailscale:
    image: tailscale/tailscale
    container_name: tailscale
    restart: unless-stopped
    network_mode: host
    cap_add:
      - NET_ADMIN
      - NET_RAW
    volumes:
      - /dev/net/tun:/dev/net/tun
      - /home/docker_data/tailscale:/var/lib/tailscale
    environment:
      - TS_AUTHKEY=your_tailscale_auth_key

